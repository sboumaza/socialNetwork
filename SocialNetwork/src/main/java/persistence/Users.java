package persistence;// default package
// Generated 17 mars 2017 11:03:08 by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "socialnetwork_version2")
public class Users implements java.io.Serializable {

	private Integer userId;
	private String firstName;
	private String lastName;
	private String password;
	private String email;
	private Set<Userphotos> userphotoses = new HashSet<Userphotos>(0);
	private Set<Status> statuses = new HashSet<Status>(0);
	private Set<Workinfo> workinfos = new HashSet<Workinfo>(0);
	private Set<Uservideos> uservideoses = new HashSet<Uservideos>(0);
	private Set<Relationships> relationshipses = new HashSet<Relationships>(0);
	private Set<Educationinfo> educationinfos = new HashSet<Educationinfo>(0);
	private Set<Personalinfo> personalinfos = new HashSet<Personalinfo>(0);

	public Users() {
	}

	public Users(String email) {
		this.email = email;
	}

	public Users(String firstName, String lastName, String password, String email, Set<Userphotos> userphotoses,
			Set<Status> statuses, Set<Workinfo> workinfos, Set<Uservideos> uservideoses,
			Set<Relationships> relationshipses, Set<Educationinfo> educationinfos, Set<Personalinfo> personalinfos) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.password = password;
		this.email = email;
		this.userphotoses = userphotoses;
		this.statuses = statuses;
		this.workinfos = workinfos;
		this.uservideoses = uservideoses;
		this.relationshipses = relationshipses;
		this.educationinfos = educationinfos;
		this.personalinfos = personalinfos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "userID", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "firstName", length = 30)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "lastName", length = 30)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "password", length = 32)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "email", nullable = false, length = 64)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Userphotos> getUserphotoses() {
		return this.userphotoses;
	}

	public void setUserphotoses(Set<Userphotos> userphotoses) {
		this.userphotoses = userphotoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Status> getStatuses() {
		return this.statuses;
	}

	public void setStatuses(Set<Status> statuses) {
		this.statuses = statuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Workinfo> getWorkinfos() {
		return this.workinfos;
	}

	public void setWorkinfos(Set<Workinfo> workinfos) {
		this.workinfos = workinfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Uservideos> getUservideoses() {
		return this.uservideoses;
	}

	public void setUservideoses(Set<Uservideos> uservideoses) {
		this.uservideoses = uservideoses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Relationships> getRelationshipses() {
		return this.relationshipses;
	}

	public void setRelationshipses(Set<Relationships> relationshipses) {
		this.relationshipses = relationshipses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Educationinfo> getEducationinfos() {
		return this.educationinfos;
	}

	public void setEducationinfos(Set<Educationinfo> educationinfos) {
		this.educationinfos = educationinfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<Personalinfo> getPersonalinfos() {
		return this.personalinfos;
	}

	public void setPersonalinfos(Set<Personalinfo> personalinfos) {
		this.personalinfos = personalinfos;
	}

}
